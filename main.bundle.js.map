{"version":3,"sources":["/home/travis/build/MaxFlower/Panoramas/src/$_lazy_route_resource lazy","/home/travis/build/MaxFlower/Panoramas/src/app/app-config.ts","/home/travis/build/MaxFlower/Panoramas/src/app/app.component.css","/home/travis/build/MaxFlower/Panoramas/src/app/app.component.html","/home/travis/build/MaxFlower/Panoramas/src/app/app.component.ts","/home/travis/build/MaxFlower/Panoramas/src/app/app.module.ts","/home/travis/build/MaxFlower/Panoramas/src/app/components/main-content/main-content.component.css","/home/travis/build/MaxFlower/Panoramas/src/app/components/main-content/main-content.component.html","/home/travis/build/MaxFlower/Panoramas/src/app/components/main-content/main-content.component.ts","/home/travis/build/MaxFlower/Panoramas/src/app/components/main-header/main-header.component.css","/home/travis/build/MaxFlower/Panoramas/src/app/components/main-header/main-header.component.html","/home/travis/build/MaxFlower/Panoramas/src/app/components/main-header/main-header.component.ts","/home/travis/build/MaxFlower/Panoramas/src/app/components/main-sidebar/main-sidebar.component.css","/home/travis/build/MaxFlower/Panoramas/src/app/components/main-sidebar/main-sidebar.component.html","/home/travis/build/MaxFlower/Panoramas/src/app/components/main-sidebar/main-sidebar.component.ts","/home/travis/build/MaxFlower/Panoramas/src/app/difinitions/index.ts","/home/travis/build/MaxFlower/Panoramas/src/app/difinitions/panorama.ts","/home/travis/build/MaxFlower/Panoramas/src/app/difinitions/setting.ts","/home/travis/build/MaxFlower/Panoramas/src/app/panoramas/components/items/default-item/default-item.component.css","/home/travis/build/MaxFlower/Panoramas/src/app/panoramas/components/items/default-item/default-item.component.html","/home/travis/build/MaxFlower/Panoramas/src/app/panoramas/components/items/default-item/default-item.component.ts","/home/travis/build/MaxFlower/Panoramas/src/app/panoramas/components/items/grid-item/grid-item.component.css","/home/travis/build/MaxFlower/Panoramas/src/app/panoramas/components/items/grid-item/grid-item.component.html","/home/travis/build/MaxFlower/Panoramas/src/app/panoramas/components/items/grid-item/grid-item.component.ts","/home/travis/build/MaxFlower/Panoramas/src/app/panoramas/components/items/list-item/list-item.component.css","/home/travis/build/MaxFlower/Panoramas/src/app/panoramas/components/items/list-item/list-item.component.html","/home/travis/build/MaxFlower/Panoramas/src/app/panoramas/components/items/list-item/list-item.component.ts","/home/travis/build/MaxFlower/Panoramas/src/app/panoramas/panorama.service.ts","/home/travis/build/MaxFlower/Panoramas/src/app/panoramas/panoramas.module.ts","/home/travis/build/MaxFlower/Panoramas/src/app/panoramas/pipes/favorite-panoramas.pipe.ts","/home/travis/build/MaxFlower/Panoramas/src/app/services/settings.service.ts","/home/travis/build/MaxFlower/Panoramas/src/environments/environment.ts","/home/travis/build/MaxFlower/Panoramas/src/main.ts"],"names":[],"mappings":"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","file":"main.bundle.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncatched exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"../../../../../src/$$_lazy_route_resource lazy recursive\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/travis/build/MaxFlower/Panoramas/src/$$_lazy_route_resource lazy\n// module id = ../../../../../src/$$_lazy_route_resource lazy recursive\n// module chunks = main","import { Injectable } from '@angular/core';\n\nimport { Config } from './difinitions/config';\n\n@Injectable()\nexport class AppConfig {\n\n  public appConfig: Config = {\n    apiUrl: 'http://api3-dev.panono.com',\n    timestampFormat: 'dd-MM-yyyy hh:mm'\n  };\n}\n\n\n\n// WEBPACK FOOTER //\n// /home/travis/build/MaxFlower/Panoramas/src/app/app-config.ts","exports = module.exports = require(\"../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".main-container {\\n  width: 100%\\n}\\n\\n.content-area {\\n  padding: 0;\\n}\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/travis/build/MaxFlower/Panoramas/src/app/app.component.css\n// module id = ../../../../../src/app/app.component.css\n// module chunks = main","module.exports = \"<div class=\\\"main-container container\\\">\\n  <app-main-header></app-main-header>\\n  <div class=\\\"content-area container-fluid\\\">\\n    <div class=\\\"row\\\">\\n      <div class=\\\"sidebar-container col-xs-3 col-sm-3 col-md-3 col-lg-3\\\" [ngClass]='{\\\"hide\\\": !sidebarVisibility}'>\\n        <app-main-sidebar></app-main-sidebar>\\n      </div>\\n      <div class=\\\"content-container\\\" [ngClass]='sidebarVisibility ? \\\"col-xs-9 col-sm-9 col-md-9 col-lg-9\\\" : \\\"\\\"'>\\n        <app-main-content></app-main-content>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/travis/build/MaxFlower/Panoramas/src/app/app.component.html\n// module id = ../../../../../src/app/app.component.html\n// module chunks = main","import { Component, OnInit, OnDestroy } from '@angular/core';\n\nimport { Subscription } from 'rxjs/Subscription';\n\nimport { SettingsService } from './services/settings.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit, OnDestroy {\n  public sidebarVisibility: boolean;\n\n  private subscriptions: Array<Subscription> = [];\n\n  constructor(private settingsService: SettingsService) {}\n\n  public ngOnInit(): void {\n    this.subscriptions.push(this.settingsService.sidebarVisibilityBehaviorSubject.subscribe((val: boolean) => {\n      this.sidebarVisibility = val;\n    }));\n  }\n\n  public ngOnDestroy(): void {\n    this.subscriptions.forEach((sub: Subscription) => {\n      sub.unsubscribe();\n    });\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// /home/travis/build/MaxFlower/Panoramas/src/app/app.component.ts","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { AppConfig } from './app-config';\nimport { PanoramasModule } from './panoramas/panoramas.module';\nimport { AppComponent } from './app.component';\nimport { MainHeaderComponent } from './components/main-header/main-header.component';\nimport { MainSidebarComponent } from './components/main-sidebar/main-sidebar.component';\nimport { MainContentComponent } from './components/main-content/main-content.component';\nimport { PanoramaService } from './panoramas/panorama.service';\nimport { SettingsService } from './services/settings.service';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    MainHeaderComponent,\n    MainSidebarComponent,\n    MainContentComponent\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    PanoramasModule,\n    ReactiveFormsModule\n  ],\n  providers: [ AppConfig, PanoramaService, SettingsService ],\n  bootstrap: [ AppComponent ]\n})\nexport class AppModule { }\n\n\n\n// WEBPACK FOOTER //\n// /home/travis/build/MaxFlower/Panoramas/src/app/app.module.ts","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/travis/build/MaxFlower/Panoramas/src/app/components/main-content/main-content.component.css\n// module id = ../../../../../src/app/components/main-content/main-content.component.css\n// module chunks = main","module.exports = \"<ng-template ngFor let-panorama [ngForOf]=\\\"filteredPanoramas\\\">\\n  <app-grid-item *ngIf=\\\"isGrid()\\\" [item]='panorama' (favouriteChange)=\\\"favouriteChange()\\\"></app-grid-item>\\n  <app-list-item *ngIf=\\\"isList()\\\" [item]='panorama' (favouriteChange)=\\\"favouriteChange()\\\"></app-list-item>\\n</ng-template>\\n<div class='no-data-label col-md-12 text-center' *ngIf=\\\"!filteredPanoramas.length\\\">\\n  <h3>No data! <small>Please try again with new filter.</small></h3>\\n</div>\\n\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/travis/build/MaxFlower/Panoramas/src/app/components/main-content/main-content.component.html\n// module id = ../../../../../src/app/components/main-content/main-content.component.html\n// module chunks = main","import { Component, OnInit, OnDestroy } from '@angular/core';\n\nimport { Subscription } from 'rxjs/Subscription';\n\nimport { FilterSetting, ViewSetting, Panorama } from '../../difinitions';\nimport { PanoramaService } from '../../panoramas/panorama.service';\nimport { SettingsService } from '../../services/settings.service';\nimport { FavoritePanoramasPipe } from '../../panoramas/pipes/favorite-panoramas.pipe';\n\n@Component({\n  selector: 'app-main-content',\n  templateUrl: './main-content.component.html',\n  styleUrls: ['./main-content.component.css'],\n  providers: [ FavoritePanoramasPipe ]\n})\nexport class MainContentComponent implements OnInit, OnDestroy {\n  public filteredPanoramas: Array<Panorama> = [];\n  public panoramas: Array<Panorama> = [];\n  public filterSetting: FilterSetting;\n  public viewSetting: ViewSetting;\n\n  private subscriptions:  Array<Subscription> = [];\n\n  constructor(\n    private panoramaService: PanoramaService,\n    private settingsService: SettingsService,\n    private favoritePanoramasPipe: FavoritePanoramasPipe\n  ) { }\n\n  public ngOnInit(): void {\n    this.subscriptions.push(this.panoramaService.getPanoramas().subscribe((next: Array<Panorama>) => {\n      this.panoramas = this.panoramaService.preparePanoramas(next);\n      this.updateFiltredList();\n    }));\n\n    this.subscriptions.push(this.settingsService.viewBehaviorSubject.subscribe((next: ViewSetting) => {\n      this.viewSetting = next;\n    }));\n\n    this.subscriptions.push(this.settingsService.filterBehaviorSubject.subscribe((next: FilterSetting) => {\n      this.filterSetting = next;\n      this.updateFiltredList();\n    }));\n  }\n\n  public isGrid(): boolean {\n    return this.viewSetting === ViewSetting.Grid;\n  }\n\n  public isList(): boolean {\n    return this.viewSetting === ViewSetting.List;\n  }\n\n  public ngOnDestroy(): void {\n    this.subscriptions.forEach((sub: Subscription) => {\n      sub.unsubscribe();\n    });\n  }\n\n  public favouriteChange(): void {\n    this.updateFiltredList();\n  }\n\n  private updateFiltredList(): void {\n    this.filteredPanoramas = this.favoritePanoramasPipe.transform(this.panoramas, this.filterSetting);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// /home/travis/build/MaxFlower/Panoramas/src/app/components/main-content/main-content.component.ts","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".navbar-brand img {\\n  display: inline-block;\\n  height: auto;\\n  padding-right: 15px;\\n  width: 100px;\\n}\\n\\n.nav-flex {\\n  display: -webkit-box;\\n  display: -ms-flexbox;\\n  display: flex;\\n  height: 50px;\\n  -webkit-box-pack: end;\\n      -ms-flex-pack: end;\\n          justify-content: flex-end;\\n}\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/travis/build/MaxFlower/Panoramas/src/app/components/main-header/main-header.component.css\n// module id = ../../../../../src/app/components/main-header/main-header.component.css\n// module chunks = main","module.exports = \"<nav class=\\\"navbar navbar-inverse fixed-top\\\">\\n  <div class=\\\"container-fluid\\\">\\n    <div class=\\\"navbar-header\\\">\\n      <a class=\\\"navbar-brand\\\" href=\\\"javascript:void(0)\\\"><img alt=\\\"Brand\\\" src=\\\"/assets/img/brand-logo.png\\\"> {{ title }}</a>\\n    </div>\\n    <div class=\\\"nav-flex\\\" [ngClass]=\\\"{'hide': !isButtonAvailable}\\\">\\n      <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)='showSidebar()'>Show sidebar</button>\\n    </div>\\n  </div>\\n</nav>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/travis/build/MaxFlower/Panoramas/src/app/components/main-header/main-header.component.html\n// module id = ../../../../../src/app/components/main-header/main-header.component.html\n// module chunks = main","import {Component, OnDestroy, OnInit} from '@angular/core';\n\nimport { Subscription } from 'rxjs/Subscription';\n\nimport { SettingsService } from '../../services/settings.service';\n\n@Component({\n  selector: 'app-main-header',\n  templateUrl: './main-header.component.html',\n  styleUrls: ['./main-header.component.css']\n})\nexport class MainHeaderComponent implements OnInit, OnDestroy {\n  public title: string = 'Favourite 360';\n  public isButtonAvailable: boolean;\n\n  private subscriptions: Array<Subscription> = [];\n\n  constructor(private settingsService: SettingsService) { }\n\n  public ngOnInit(): void {\n    this.subscriptions.push(this.settingsService.sidebarVisibilityBehaviorSubject.subscribe((val: boolean) => {\n      this.isButtonAvailable = !val;\n    }));\n  }\n\n  public showSidebar(): void {\n    this.settingsService.sidebarVisibility = true;\n  }\n\n  public ngOnDestroy(): void {\n    this.subscriptions.forEach((sub: Subscription) => {\n      sub.unsubscribe();\n    });\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// /home/travis/build/MaxFlower/Panoramas/src/app/components/main-header/main-header.component.ts","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".panel-heading span {\\n  font-weight: 600;\\n}\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/travis/build/MaxFlower/Panoramas/src/app/components/main-sidebar/main-sidebar.component.css\n// module id = ../../../../../src/app/components/main-sidebar/main-sidebar.component.css\n// module chunks = main","module.exports = \"<div class=\\\"panel panel-default\\\">\\n  <div class=\\\"panel-heading\\\">\\n    <span class=\\\"text-success\\\">{{ title }}</span>\\n    <div class=\\\"pull-right\\\">\\n      <button type=\\\"button\\\" class=\\\"btn btn-primary btn-xs\\\" (click)='hideSidebar()' >Hide</button>\\n    </div>\\n  </div>\\n  <div class=\\\"panel-body\\\">\\n    <form [formGroup]=\\\"sidebarForm\\\">\\n      <div class=\\\"form-group\\\">\\n        <label>View</label>\\n        <select formControlName=\\\"view\\\" class=\\\"form-control\\\" id=\\\"view\\\">\\n          <option *ngFor=\\\"let view of viewKeys\\\">\\n            {{view}}\\n          </option>\\n        </select>\\n      </div>\\n      <div class=\\\"form-group\\\">\\n        <label>Filter</label>\\n        <select formControlName=\\\"filter\\\" class=\\\"form-control\\\" id=\\\"filter\\\">\\n          <option *ngFor=\\\"let filter of filterKeys\\\">\\n            {{filter}}\\n          </option>\\n        </select>\\n      </div>\\n    </form>\\n  </div>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/travis/build/MaxFlower/Panoramas/src/app/components/main-sidebar/main-sidebar.component.html\n// module id = ../../../../../src/app/components/main-sidebar/main-sidebar.component.html\n// module chunks = main","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { FormControl, FormGroup } from '@angular/forms';\n\nimport { Subscription } from 'rxjs/Subscription';\n\nimport { FilterSetting, ViewSetting } from '../../difinitions/setting';\nimport { SettingsService } from '../../services/settings.service';\n\n@Component({\n  selector: 'app-main-sidebar',\n  templateUrl: './main-sidebar.component.html',\n  styleUrls: ['./main-sidebar.component.css']\n})\nexport class MainSidebarComponent implements OnInit, OnDestroy {\n  public title: string = 'Sidebar';\n  public sidebarForm: FormGroup;\n  public filterKeys: Array<string>;\n  public viewKeys: Array<string>;\n\n  private filters: any = FilterSetting;\n  private views: any = ViewSetting;\n  private subscriptions: Array<Subscription> = [];\n\n  constructor(private settingsService: SettingsService) {\n    this.filterKeys = Object.keys(this.filters).filter(key => key !== undefined);\n    this.viewKeys = Object.keys(this.views).filter(key => key !== undefined);\n  }\n\n  public ngOnInit(): void {\n    this.sidebarForm = new FormGroup({\n      filter: new FormControl(this.settingsService.filterSetting),\n      view: new FormControl(this.settingsService.viewSetting)\n    });\n\n    this.onChanges();\n  }\n\n  public onChanges(): void {\n    this.subscriptions.push(this.sidebarForm.get('filter').valueChanges.subscribe((val: FilterSetting) => {\n      this.settingsService.filterSetting = val;\n    }));\n\n    this.subscriptions.push(this.sidebarForm.get('view').valueChanges.subscribe((val: ViewSetting) => {\n      this.settingsService.viewSetting = val;\n    }));\n  }\n\n  public hideSidebar(): void {\n    this.settingsService.sidebarVisibility = false;\n  }\n\n  public ngOnDestroy(): void {\n    this.subscriptions.forEach((sub: Subscription) => {\n      sub.unsubscribe();\n    });\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// /home/travis/build/MaxFlower/Panoramas/src/app/components/main-sidebar/main-sidebar.component.ts","export * from './config';\nexport * from './panorama';\nexport * from './response';\nexport * from './setting';\n\n\n\n// WEBPACK FOOTER //\n// /home/travis/build/MaxFlower/Panoramas/src/app/difinitions/index.ts","export enum PanoramaAuthorType {\n  user = 'user'\n  // TODO: can add another types of authors\n}\n\nexport enum PanoramaType {\n  panorama = 'panorama'\n  // TODO: can add another types of panoramas\n}\n\nexport interface PanoramaAuthorData {\n  username: string;\n  display_name: string;\n}\n\nexport interface PanoramaWatermark {\n  show: boolean;\n}\n\nexport interface PanoramaImagesThumbnails {\n  height: number;\n  width: number;\n  url: string;\n  content_type: string;\n}\n\nexport interface PanoramaImagesCubemaps {\n  size: number;\n  lod: number;\n  content_type: string;\n  format: string;\n  base_url: string;\n}\n\nexport interface PanoramaImagesPreview {\n  width: number;\n  content_type: string;\n  url: string;\n}\n\nexport interface PanoramaImages {\n  thumbnails: Array<PanoramaImagesThumbnails>;\n  cubemaps: Array<PanoramaImagesCubemaps>;\n  previews: Array<PanoramaImagesPreview>;\n  equirectangulars: Array<number>;\n  orientation: Array<number>;\n}\n\nexport interface PanoramaAuthor {\n  type: PanoramaAuthorType;\n  readonly id: string;\n  self: string;\n  data: PanoramaAuthorData;\n}\n\nexport interface PanoramaData {\n  readonly image_id: string;\n  images: PanoramaImages;\n  title: string;\n  description: string;\n  created_at: string;\n  privacy: string;\n  watermark: PanoramaWatermark;\n  featured_at: string;\n  published_at: string;\n  author: PanoramaAuthor;\n  allow_share: boolean;\n}\n\nexport interface Panorama {\n  readonly type: PanoramaType;\n  readonly id: string;\n  readonly self: string;\n  data: PanoramaData;\n  isFavorite: boolean;\n}\n\n\n\n// WEBPACK FOOTER //\n// /home/travis/build/MaxFlower/Panoramas/src/app/difinitions/panorama.ts","export enum ViewSetting {\n  Grid = 'Grid',\n  List = 'List'\n}\n\nexport enum FilterSetting {\n  All = 'All',\n  OnlyFavorites = 'Only Favorites'\n}\n\n\n\n// WEBPACK FOOTER //\n// /home/travis/build/MaxFlower/Panoramas/src/app/difinitions/setting.ts","exports = module.exports = require(\"../../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/travis/build/MaxFlower/Panoramas/src/app/panoramas/components/items/default-item/default-item.component.css\n// module id = ../../../../../src/app/panoramas/components/items/default-item/default-item.component.css\n// module chunks = main","module.exports = \"<p>\\n  default-item works!\\n</p>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/travis/build/MaxFlower/Panoramas/src/app/panoramas/components/items/default-item/default-item.component.html\n// module id = ../../../../../src/app/panoramas/components/items/default-item/default-item.component.html\n// module chunks = main","import {Component, OnInit, Input, Output, EventEmitter} from '@angular/core';\n\nimport { PanoramaService } from '../../../panorama.service';\nimport { Panorama } from '../../../../difinitions';\n\n@Component({\n  selector: 'app-default-item',\n  templateUrl: './default-item.component.html',\n  styleUrls: ['./default-item.component.css']\n})\nexport class DefaultItemComponent implements OnInit {\n  @Input() public item: Panorama;\n  @Output() public favouriteChange: EventEmitter<boolean> = new EventEmitter<boolean>();\n\n  public timestampFormat: string;\n\n  constructor(private panoramaService: PanoramaService) { }\n\n  public ngOnInit(): void {\n    this.timestampFormat = this.panoramaService.getTimestampFormat();\n  }\n\n  public addToFavorites(id: string): void {\n    this.panoramaService.addFavorite(id);\n    this.item.isFavorite = true;\n    this.favouriteChange.emit(this.item.isFavorite);\n  }\n\n  public removeFromFavorites(id: string): void {\n    this.panoramaService.removeFavorite(id);\n    this.item.isFavorite = false;\n    this.favouriteChange.emit(this.item.isFavorite);\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// /home/travis/build/MaxFlower/Panoramas/src/app/panoramas/components/items/default-item/default-item.component.ts","exports = module.exports = require(\"../../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"@-webkit-keyframes scroll {\\n  0% {\\n    -webkit-transform: translate(0, 0);\\n    transform: translate(0, 0);\\n  }\\n  100% {\\n    -webkit-transform: translate(-100%, 0);\\n    transform: translate(-100%, 0)\\n  }\\n}\\n\\n@keyframes scroll {\\n  0% {\\n    -webkit-transform: translate(0, 0);\\n            transform: translate(0, 0);\\n  }\\n  100% {\\n    -webkit-transform: translate(-100%, 0);\\n            transform: translate(-100%, 0)\\n  }\\n}\\n\\n.panorama-grid-element {\\n  padding-right: 0;\\n}\\n\\n.panorama-grid-element .well {\\n  color: azure;\\n  font-size: 12px;\\n  height: 150px;\\n  padding: 30px;\\n}\\n\\n.margin-40 {\\n  margin-bottom: 40px;\\n}\\n\\n.grid-title {\\n  cursor: pointer;\\n  display: block;\\n  font-weight: 600;\\n  overflow: hidden;\\n  white-space: nowrap;\\n  width: 49%;\\n}\\n\\n.grid-date {\\n  text-align: right;\\n  width: 49%;\\n}\\n\\n.grid-title span:hover {\\n  display: inline-block;\\n  padding-left: 100%;\\n  -webkit-animation: scroll 5s infinite linear;\\n  animation: scroll 5s infinite linear;\\n}\\n\\n\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/travis/build/MaxFlower/Panoramas/src/app/panoramas/components/items/grid-item/grid-item.component.css\n// module id = ../../../../../src/app/panoramas/components/items/grid-item/grid-item.component.css\n// module chunks = main","module.exports = \"<div class=\\\"panorama-grid-element col-xs-6 col-sm-4 col-md-4 col-lg-3\\\" *ngIf=\\\"item\\\">\\n  <div class=\\\"well\\\" [ngStyle]=\\\"{'background-image':'url(' + item.data.images.thumbnails[0].url +')', 'background-size': 'cover'}\\\">\\n    <div class=\\\"row\\\">\\n      <div class=\\\"pull-right\\\">\\n        <button type=\\\"button\\\" class=\\\"btn btn-success btn-md\\\" *ngIf='!item.isFavorite' (click)='addToFavorites(item.id)'>Add</button>\\n        <button type=\\\"button\\\" class=\\\"btn btn-primary btn-md\\\" *ngIf='item.isFavorite' (click)='removeFromFavorites(item.id)'>Favorite</button>\\n      </div>\\n    </div>\\n    <div class=\\\"margin-40\\\"></div>\\n    <div class=\\\"row\\\">\\n      <div class=\\\"grid-title pull-left\\\"><span>{{ item.data.title }}</span></div>\\n      <div class=\\\"grid-date pull-right\\\"> {{ item.data.created_at | date: timestampFormat }} </div>\\n    </div>\\n  </div>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/travis/build/MaxFlower/Panoramas/src/app/panoramas/components/items/grid-item/grid-item.component.html\n// module id = ../../../../../src/app/panoramas/components/items/grid-item/grid-item.component.html\n// module chunks = main","import { Component } from '@angular/core';\n\nimport { DefaultItemComponent } from '../default-item/default-item.component';\n\n@Component({\n  selector: 'app-grid-item',\n  templateUrl: './grid-item.component.html',\n  styleUrls: ['./grid-item.component.css']\n})\nexport class GridItemComponent extends DefaultItemComponent {}\n\n\n\n// WEBPACK FOOTER //\n// /home/travis/build/MaxFlower/Panoramas/src/app/panoramas/components/items/grid-item/grid-item.component.ts","exports = module.exports = require(\"../../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".content {\\n  padding: 5px 19px;\\n}\\n\\n.content .flex-container {\\n  -webkit-box-align: center;\\n      -ms-flex-align: center;\\n          align-items: center;\\n  display: -webkit-box;\\n  display: -ms-flexbox;\\n  display: flex;\\n  -ms-flex-pack: distribute;\\n      justify-content: space-around;\\n}\\n\\n.content .list-title {\\n  font-weight: 600;\\n  overflow: hidden;\\n  text-overflow: ellipsis;\\n  white-space: nowrap;\\n  width: 45%;\\n}\\n\\n.content .list-date {\\n  width: 30%;\\n}\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/travis/build/MaxFlower/Panoramas/src/app/panoramas/components/items/list-item/list-item.component.css\n// module id = ../../../../../src/app/panoramas/components/items/list-item/list-item.component.css\n// module chunks = main","module.exports = \"<div class=\\\"panorama-list-element col-sm-12\\\">\\n  <div class=\\\"well content\\\">\\n    <div class=\\\"flex-container\\\">\\n      <div class=\\\"list-title\\\"> {{ item.data.title }} </div>\\n      <div class=\\\"list-date\\\"> {{ item.data.created_at | date: timestampFormat }} </div>\\n      <div class=\\\"list-button\\\">\\n        <button type=\\\"button\\\" class=\\\"btn btn-success btn-sm\\\" *ngIf='!item.isFavorite' (click)='addToFavorites(item.id)'>Add</button>\\n        <button type=\\\"button\\\" class=\\\"btn btn-primary btn-sm\\\" *ngIf='item.isFavorite' (click)='removeFromFavorites(item.id)'>Favorite</button>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/travis/build/MaxFlower/Panoramas/src/app/panoramas/components/items/list-item/list-item.component.html\n// module id = ../../../../../src/app/panoramas/components/items/list-item/list-item.component.html\n// module chunks = main","import { Component } from '@angular/core';\n\nimport { DefaultItemComponent } from '../default-item/default-item.component';\n\n@Component({\n  selector: 'app-list-item',\n  templateUrl: './list-item.component.html',\n  styleUrls: ['./list-item.component.css']\n})\nexport class ListItemComponent extends DefaultItemComponent {}\n\n\n\n// WEBPACK FOOTER //\n// /home/travis/build/MaxFlower/Panoramas/src/app/panoramas/components/items/list-item/list-item.component.ts","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\nimport { Observable } from 'rxjs/Observable';\nimport 'rxjs/add/operator/map';\nimport 'rxjs/add/operator/publishReplay';\n\nimport { AppConfig } from '../app-config';\nimport { Panorama, Response } from '../difinitions';\nimport { isNullOrUndefined } from 'util';\n\n@Injectable()\nexport class PanoramaService {\n  private favorites: Array<string> = localStorage.getItem('Favorites') ? localStorage.getItem('Favorites').split(',') : [];\n\n  constructor(\n    private config: AppConfig,\n    private http: HttpClient\n  ) { }\n\n  private panoramasCache$: Observable<Array<Panorama>> = this.http.get<Response>(`${this.config.appConfig.apiUrl}/explore`)\n    .map(res => res.items)\n    .publishReplay(1)\n    .refCount();\n\n  public getPanoramas(): Observable<Array<Panorama>> {\n    return this.panoramasCache$;\n  }\n\n  public getFavorites(): Array<string> {\n    this.favorites = localStorage.getItem('Favorites') ? localStorage.getItem('Favorites').split(',') : [];\n    return this.favorites;\n  }\n\n  public addFavorite(id: string): void {\n    this.favorites.push(id);\n    localStorage.setItem('Favorites', this.favorites.join(','));\n  }\n\n  public removeFavorite(id: string): void {\n    const it: number = this.favorites.indexOf(id);\n\n    if (it !== -1) {\n      this.favorites.splice(it, 1);\n      localStorage.setItem('Favorites', this.favorites.join(','));\n    }\n  }\n\n  public getTimestampFormat(): string {\n    return this.config.appConfig.timestampFormat || 'dd-mm-yyyy';\n  }\n\n  public preparePanoramas(panoramas: Array<Panorama>): Array<Panorama> {\n    const checkedPanoramas: Array<Panorama> = [];\n\n    if (!isNullOrUndefined(panoramas)) {\n      this.getFavorites();\n      panoramas.map((item: Panorama) => {\n        item.isFavorite = this.favorites.indexOf(item.id) !== -1;\n        checkedPanoramas.push(item);\n      });\n    }\n\n    return checkedPanoramas;\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// /home/travis/build/MaxFlower/Panoramas/src/app/panoramas/panorama.service.ts","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { HttpClientModule } from '@angular/common/http';\n\nimport { GridItemComponent } from './components/items/grid-item/grid-item.component';\nimport { ListItemComponent } from './components/items/list-item/list-item.component';\nimport { DefaultItemComponent } from './components/items/default-item/default-item.component';\nimport { FavoritePanoramasPipe } from './pipes/favorite-panoramas.pipe';\n\n\n@NgModule({\n  imports: [\n    CommonModule\n  ],\n  declarations: [\n    GridItemComponent,\n    ListItemComponent,\n    DefaultItemComponent,\n    FavoritePanoramasPipe\n  ],\n  exports: [\n    HttpClientModule,\n    GridItemComponent,\n    ListItemComponent,\n    DefaultItemComponent,\n    FavoritePanoramasPipe\n  ],\n  providers: []\n})\nexport class PanoramasModule { }\n\n\n\n// WEBPACK FOOTER //\n// /home/travis/build/MaxFlower/Panoramas/src/app/panoramas/panoramas.module.ts","import { Pipe, PipeTransform } from '@angular/core';\n\nimport { Panorama, FilterSetting } from '../../difinitions';\n\n@Pipe({\n  name: 'favoritePanoramas'\n})\nexport class FavoritePanoramasPipe implements PipeTransform {\n\n  public transform(value: Array<Panorama>, filterType: FilterSetting): Array<Panorama> {\n    if (filterType === FilterSetting.All) {\n      return value;\n    } else {\n      return value.filter((panorama => {\n        return panorama.isFavorite === true;\n      }));\n    }\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// /home/travis/build/MaxFlower/Panoramas/src/app/panoramas/pipes/favorite-panoramas.pipe.ts","import { Injectable } from '@angular/core';\n\nimport { BehaviorSubject } from 'rxjs/BehaviorSubject';\n\nimport { ViewSetting, FilterSetting } from '../difinitions/setting';\n\n@Injectable()\nexport class SettingsService {\n  public filterBehaviorSubject: BehaviorSubject<FilterSetting> = new BehaviorSubject<FilterSetting>(FilterSetting.All);\n  public viewBehaviorSubject: BehaviorSubject<ViewSetting> = new BehaviorSubject<ViewSetting>(ViewSetting.Grid);\n  public sidebarVisibilityBehaviorSubject: BehaviorSubject<boolean> = new BehaviorSubject<boolean>(true);\n\n  private filter: FilterSetting = FilterSetting.All;\n  private view: ViewSetting = ViewSetting.Grid;\n  private isFormVisible: boolean = true;\n\n  constructor() { }\n\n  public get filterSetting(): FilterSetting {\n    return this.filter;\n  }\n\n  public set filterSetting(val: FilterSetting) {\n    if (val !== this.filter) {\n      this.filter = val;\n      this.filterBehaviorSubject.next(val);\n    }\n  }\n\n  public get viewSetting(): ViewSetting {\n    return this.view;\n  }\n\n  public set viewSetting(val: ViewSetting) {\n    if (val !== this.view) {\n      this.view = val;\n      this.viewBehaviorSubject.next(val);\n    }\n  }\n\n  public get sidebarVisibility(): boolean {\n    return this.isFormVisible;\n  }\n\n  public set sidebarVisibility(val: boolean) {\n    if (val !== this.isFormVisible) {\n      this.isFormVisible = val;\n      this.sidebarVisibilityBehaviorSubject.next(val);\n    }\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// /home/travis/build/MaxFlower/Panoramas/src/app/services/settings.service.ts","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `.angular-cli.json`.\n\nexport const environment: any = {\n  production: false\n};\n\n\n\n// WEBPACK FOOTER //\n// /home/travis/build/MaxFlower/Panoramas/src/environments/environment.ts","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n\n\n\n// WEBPACK FOOTER //\n// /home/travis/build/MaxFlower/Panoramas/src/main.ts"],"sourceRoot":"webpack:///"}